CMAKE_MINIMUM_REQUIRED (VERSION 3.10)

PROJECT (fuse LANGUAGES C CXX)

FIND_PACKAGE (JNI REQUIRED)
FIND_PACKAGE (Vulkan REQUIRED)

SET (CMAKE_C_STANDARD 11)
SET (CMAKE_C_STANDARD_REQUIRED ON)
SET (CMAKE_C_EXTENSIONS OFF)

SET (CMAKE_CXX_STANDARD 11)
SET (CMAKE_CXX_STANDARD_REQUIRED ON)
SET (CMAKE_CXX_EXTENSIONS OFF)

IF (NOT CMAKE_BUILD_TYPE)

	SET (CMAKE_BUILD_TYPE "Release" CACHE STRING "Choose a build type (Debug, Release)" FORCE)

ENDIF ()

IF (CMAKE_BUILD_TYPE STREQUAL "debug")

	ADD_COMPILE_DEFINITIONS (BUILD_DEBUG)

ELSEIF (CMAKE_BUILD_TYPE STREQUAL "release")
	
ELSE ()

	MESSAGE (FATAL_ERROR "Unknown build type: ${CMAKE_BUILD_TYPE}")

ENDIF ()

IF (CMAKE_SYSTEM_NAME STREQUAL "Windows")

	ADD_COMPILE_DEFINITIONS (OS_WINDOWS)

ELSEIF (CMAKE_SYSTEM_NAME STREQUAL "Linux")

	ADD_COMPILE_DEFINITIONS (OS_LINUX)

ELSEIF (CMAKE_SYSTEM_NAME STREQUAL "Darwin")

	ADD_COMPILE_DEFINITIONS (OS_DARWIN)

ELSE ()

	MESSAGE (FATAL_ERROR "Unknown platform: ${CMAKE_SYSTEM_NAME}")

ENDIF ()

IF (CMAKE_C_COMPILER_ID STREQUAL "MSVC")

	SET (CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} /Od")
	SET (CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} /O2 /Oi /Ot /GL /fp:fast")

ELSEIF (CMAKE_C_COMPILER_ID STREQUAL "GNU" OR CMAKE_C_COMPILER_ID STREQUAL "Clang")

	SET (CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -Og")
	SET (CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -O3 -ffast-math -ffp-contract=fast -march=native -flto")

ELSE ()

	MESSAGE (FATAL_ERROR "Unknown compiler: ${CMAKE_C_COMPILER_ID}")

ENDIF ()

IF (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")

	SET (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /Od")
	SET (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /O2 /Oi /Ot /GL /fp:fast")

ELSEIF (CMAKE_CXX_COMPILER_ID STREQUAL "GNU" OR CMAKE_CXX_COMPILER_ID STREQUAL "Clang")

	SET (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Og")
	SET (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3 -ffast-math -ffp-contract=fast -march=native -flto")

ELSE ()

	MESSAGE (FATAL_ERROR "Unknown compiler: ${CMAKE_C_COMPILER_ID}")

ENDIF ()

IF (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")

	SET (CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG}")
	SET (CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} /LTCG /OPT:REF /OPT:ICF")

ELSEIF (CMAKE_CXX_COMPILER_ID STREQUAL "GNU" OR CMAKE_CXX_COMPILER_ID STREQUAL "Clang")

	SET (CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG}")
	SET (CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -flto -Wl,--gc-sections -Wl,--icf=safe")

ELSE ()

	MESSAGE (FATAL_ERROR "Unknown compiler: ${CMAKE_C_COMPILER_ID}")

ENDIF ()

ADD_SUBDIRECTORY (vendor)
ADD_SUBDIRECTORY (shader)
ADD_SUBDIRECTORY (library)
ADD_SUBDIRECTORY (engine)
ADD_SUBDIRECTORY (editor)
ADD_SUBDIRECTORY (game)