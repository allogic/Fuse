#version 460 core

#extension GL_ARB_shading_language_include : require
#extension GL_EXT_nonuniform_qualifier : require

#include "../terrain/biome.glsl"

#define VOXEL_EMPTY (0U)

#define VOXEL_IS_SOLID(VOXEL) ((VOXEL & 0x80000000U) == 0x80000000U)

#define VOXEL_SET_SOLID(VOXEL) (VOXEL | 0x80000000U)

struct constant_values_t
{
	ivec3 world_position;
	int lod;
};

layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout (binding = 0) uniform cluster_info_t
{
	ivec3 chunk_count;
	int chunk_size;
	int max_lod_levels;
} cluster_info;

layout (binding = 1, r32ui) uniform uimage3D chunks[];

layout (push_constant) uniform constant_t
{
	constant_values_t values;
} constant;

uint get_voxel(in ivec3 chunk_position, in ivec3 voxel_position, in int lod)
{
	int chunk_index = int(
		(chunk_position.x / cluster_info.chunk_size) +
		(chunk_position.y / cluster_info.chunk_size) * cluster_info.chunk_count.x +
		(chunk_position.z / cluster_info.chunk_size) * cluster_info.chunk_count.x * cluster_info.chunk_count.y
	);

	chunk_index = lod + (chunk_index * cluster_info.max_lod_levels);

	if (chunk_index < (cluster_info.chunk_count.x * cluster_info.chunk_count.y * cluster_info.chunk_count.z * cluster_info.max_lod_levels))
	{
		return uint(imageLoad(chunks[chunk_index], voxel_position).r);
	}

	return VOXEL_EMPTY;
}
void set_voxel(in ivec3 chunk_position, in ivec3 voxel_position, in int lod, in uint voxel)
{
	int chunk_index = int(
		(chunk_position.x / cluster_info.chunk_size) +
		(chunk_position.y / cluster_info.chunk_size) * cluster_info.chunk_count.x +
		(chunk_position.z / cluster_info.chunk_size) * cluster_info.chunk_count.x * cluster_info.chunk_count.y
	);

	chunk_index = lod + (chunk_index * cluster_info.max_lod_levels);

	if (chunk_index < (cluster_info.chunk_count.x * cluster_info.chunk_count.y * cluster_info.chunk_count.z * cluster_info.max_lod_levels))
	{
		imageStore(chunks[chunk_index], voxel_position, uvec4(voxel, 0, 0, 0));
	}
}

void main()
{
	ivec3 chunk_position = constant.values.world_position;
	ivec3 voxel_position = ivec3(gl_GlobalInvocationID.xyz);

	float ground_level = (cluster_info.chunk_count.y * cluster_info.chunk_size) / 2.0;
	float cluster_height = cluster_info.chunk_count.y * cluster_info.chunk_size;

	float density = biome_default(chunk_position + voxel_position, ground_level, cluster_height);

	uint voxel = VOXEL_EMPTY;

	if (density >= DENSITY_THRESHOLD)
	{
		voxel = VOXEL_SET_SOLID(voxel);
	}

	set_voxel(chunk_position, voxel_position, 0, voxel);
}
